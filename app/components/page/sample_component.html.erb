<div class="sample-component">
  <header>タイトル</header>
  <%= render Ui::ButtonComponent.new(category: :primary, size: :medium, text: "🌙", html_options: { id: "theme-toggle" }) %>
  <p>サンプルの文章</p>
  <p>文中の<a href="#">リンク</a>のサンプル</p>
  <div class="info-box">メッセージブロック</div>
  <h1>見出し1</h1>
  <p>テスト</p>
  <h2>見出し2</h2>
  <p>テスト</p>
  <h3>見出し3</h3>
  <p>テスト</p>
  <h4>見出し4</h4>
  <p>テスト</p>
  <h5>見出し5</h5>
  <p>テスト</p>
  <h6>見出し6</h6>
  <p>テスト</p>

  <%= render Ui::ButtonComponent.new(category: :secondary, size: :large, text: "ラージ")%>
  <%= render Ui::ButtonComponent.new(category: :secondary, size: :medium, text: "セカンダリー")%>
  <%= render Ui::ButtonComponent.new(category: :primary, size: :medium, text: "プライマリー")%>
  <%= render Ui::ButtonComponent.new(category: :primary, size: :small, text: "small")%>
  <%= render Ui::ButtonComponent.new(category: :primary, size: :full, text: "プライマリー/フルサイズ")%>
  <%= render Ui::ButtonComponent.new(category: :primary, size: :medium, text: "無効なボタン", html_options: { disabled: true })%>
  <%= render Ui::ButtonComponent.new(category: :secondary, size: :medium, text: "無効なボタン", html_options: { disabled: true })%>
  <%= render Ui::ButtonComponent.new(category: :primary, size: :medium, variant: :danger, text: "danger")%>
  <%= render Ui::ButtonComponent.new(category: :secondary, size: :medium, variant: :danger, text: "danger")%>
    <%= render Ui::ButtonComponent.new(category: :primary, size: :medium, variant: :danger, text: "danger", html_options: { disabled: true })%>
  <%= render Ui::ButtonComponent.new(category: :secondary, size: :medium, variant: :danger, text: "danger", html_options: { disabled: true })%>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const themeToggle = document.getElementById('theme-toggle');
    const currentTheme = localStorage.getItem('theme') || 'light';
    
    // 初期テーマの設定
    document.documentElement.style.colorScheme = currentTheme;
    themeToggle.querySelector('.glass-text').textContent = currentTheme === 'dark' ? '☀️' : '🌙';
    
    themeToggle.addEventListener('click', function() {
      const currentTheme = document.documentElement.style.colorScheme;
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      document.documentElement.style.colorScheme = newTheme;
      localStorage.setItem('theme', newTheme);
      themeToggle.querySelector('.glass-text').textContent = newTheme === 'dark' ? '☀️' : '🌙';
    });
  });
</script>

